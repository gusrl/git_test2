<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">
	
	<!--
		
		1단계 : 시큐리티가 제공하는 디폴트 페이지 사용
		
		security 감시해야할 url 과 접근 가능한 권한을 정의한다. 즉 권한이 없다면 해당 요청까지 들어가지 못 하고 중간에 인터셉트된다.
		pattern : 권한을 적용할 URL 요청명 
		access : 접근 권한 설정 
			-hasRole('권한명') : 해당권한만 접근가능함
			-hasAnyRole('권한1, 권한2...') : 여러권한중 1 개만 획득하면 접근가능함.
			-permitAll : 권한 없이 누구나 접근가능 
			
		form-login : 로그인 페이지에 대한 요소 지정 . 여기서는 디폴트 페이지를 사용했음 
		
		logout : 로그아웃 페이지의 요소지정 . 역시나 여기서는 디폴트 사용함.
		
		
		
	 -->
	<!-- /security1/하위의 모든놈들 .  1단계과 2 단계는 할수없당 
	<security:http>
	작은권한을 먼저 쓰고 큰걸 뒤쪽으로 써야한다. 
			<security:intercept-url pattern="/security1/**" access="hasRole('USER')"/> 
			아무런 권한 없이 개나소나 다 들어갈수 있다.  
			<security:intercept-url pattern="/**" access="permitAll"/> 
			기본 셋팅 페이지
			<security:form-login/> 
			원할땐 각각 링크를 시켜주면됌.
			<security:logout/>
	</security:http>
	

	
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="kosmo" password="1234" authorities="ROLE_USER"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
 	-->
 	
 	<!-- 1단계 -->
 	<!-- 
 		2단계 로그인 화면 커스트 마이징 하기
 		login-page : 커스텀 로그인 페이지를 지정함 
 		default-target-url : 로그인후 기본으로 보여질 페이지를 지정함. 
 		username-parameter : 로그인 시 사용할 아이디값 
 		password-parameter : 로그인 시 사용할 패스워드 
 		아이디 / 패스워드 는 반드시 input 태그의 name 속성에 지정되어야 한다 . 
 		
 		logout 하위 속성 
 			logout-url : 로그아웃시 사용될 URL 요청ㅁ병 
 			logout-success-url : 로그아웃에 성공했을떄 이동할 페이지 
 			
 		access-denied-handler 하위속성 
 			error-page : 로그인 하였으나 권한이 없는 페이지를 요청할떄 이동할 페이지
 		
 		권한 부여를 위한 권한명을 지정할때 일반적으로 접두어 ROLE 명칭 형태로 제작한다 .
 		
 		intercept-url : 해당속성을 지정할때는 반드시 
 		디테일 한 권한 (즉 작은 권한) 을  먼저 지정한후 , 아래로 내려가면서 전체에 대한 권한을 지정해 줘야 한다.
 		
 	
 	-->
 	<security:http>
			<!-- 아래 설정이 없다면 로그인 페이지 조차 접근이 불가능하게 되므로 반드시 필요한 설정 -->			
			<security:intercept-url pattern="/security2/login.do" access="permitAll"/>
			
			<!-- /admin/하위는 ADMIN 권한 획득후 접근가능 -->  
			<security:intercept-url pattern="/security2/admin/**" access="hasRole('ADMIN')"/>  
			
			<!-- /security2/하위는 USER 혹은 ADMIN 권한중 하나만 획득하면 접근가능 -->
			<security:intercept-url pattern="/security2/**" access="hasAnyRole('USER','ADMIN')"/>  
			
			<!-- 그외는 누구나 접근가능 -->
			<security:intercept-url pattern="/**" access="permitAll"/>   
			
			<!--                            이요청명으로 로그인 페이지 사용하겠다                                                                                                           로그인 실패했을때 이 url 로 이동하게 된다                                커스텀 한 페이지 에서 아이디 파라미터 id 로  패스 부분  pass 로                                                -->
			<security:form-login login-page="/security2/login.do" default-target-url="/security2/index.do" authentication-failure-url="/security2/login.do?error" username-parameter="id" password-parameter="pass" />  
			
			<!-- 로그아웃 될때 이걸루 할껭. -->
			<security:logout logout-url="/security2/logout" logout-success-url="/security2/index.do"/>
			
			<!-- 엑세스가 거부됬을땐 어떻게 처리를 할지에 대하여 얘는 자동으로 되는 놈 Ex) 당신은 권한이 없습니다. 라는 거 뜰때. -->
			<security:access-denied-handler error-page="/security2/accessDenied.do"/>
	</security:http>
 	
 	<!-- 2단계에서 사용하는 부분  
 	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="kosmo_user" password="1111" authorities="ROLE_USER"/> 접두어 ROLE 을 항상 쓴다.
																	
				<security:user name="kosmo_admin" password="2222" authorities="ROLE_ADMIN"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager> 
 
 
	-->
	
	 <!--  	3단계 : 로그인 화면 커스텀 & 권한 DB 처리   -->
 	<!-- 
   data-source-ref : 데이터베이스 연결을 나타내는 dataSource로 해당 연결은 반드시 root_context.xml에서 해야 한다.
      (sevlet-context.xml에서 연결할 수 없음)
   role-prefix : "ROLE_"와 같은 권한명 앞에 붙는 접두어(prefix)를 지정한다. 만약 해당 항목을
      "ROLE_"이라고 지정한다면 DB에는 "USER"처럼 접두어를 제거한 상태로 권한명이 입력되어야 한다.
      users-by-username-query : 아이디를 이용하여 사용자 정보를 가져오는 쿼리문을 작성한다.
   authorities-by-username-query :  아이디를 이용하여 권한정보를 가져오는 쿼리문을 작성한다.
    -->
 	<security:authentication-manager>
		<security:authentication-provider>
			 <security:jdbc-user-service data-source-ref="dataSource" 
			 role-prefix=""
			 users-by-username-query="SELECT 
			 user_id , user_pw , enabled FROM security_admin where user_id=?"
			 authorities-by-username-query="SELECT user_id,authority FROM security_admin WHERE user_id=?"/>
		</security:authentication-provider>
	</security:authentication-manager>
 	 	
</beans>
